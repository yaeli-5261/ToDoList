{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = \"http://localhost:5137\";\naxios.interceptors.response.use(response => {\n  // אם התגובה תקינה (status 200), אנחנו מחזירים אותה כמו שהיא\n  return response;\n}, error => {\n  // אם יש שגיאה בתגובה, נרשום אותה בלוג\n  // בודקים אם יש response - זה אומר שהשגיאה הגיעה מהשרת\n  if (error.response) {\n    // שגיאה מהשרת, יש response\n    console.error(\"API Error:\", error.response.status, error.response.data);\n  } else {\n    // שגיאה שלא הגיעה מהשרת (לדוג' בעיות רשת)\n    console.error(\"Error: \", error.message);\n  }\n\n  // מחזירים את השגיאה כדי שלא תפסיק את הביצוע של המערכת\n  return Promise.reject(error);\n});\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`/items`);\n    return result.data;\n  },\n  addTask: async name => {\n    if (!name) {\n      console.error(\"Task name is required!\");\n      return;\n    }\n    console.log('addTask', name);\n    const result = await axios.post(`/items`, {\n      name\n    });\n    return result.data;\n  },\n  setCompleted: async (id, isComplete) => {\n    if (!id) {\n      console.error(\"Task ID is required!\");\n      return;\n    }\n    console.log('setCompleted called with:', {\n      id,\n      isComplete\n    });\n    const result = await axios.put(`/items/${id}`, {\n      isComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    if (!id) {\n      console.error(\"Task ID is required for deletion!\");\n      return;\n    }\n    console.log('deleteTask', id);\n    const result = await axios.delete(`/items/${id}`);\n    return result.data;\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","interceptors","response","use","error","console","status","data","message","Promise","reject","getTasks","result","get","addTask","name","log","post","setCompleted","id","isComplete","put","deleteTask","delete"],"sources":["C:/Users/user1/Documents/MyProjects/praticode/ToDoListApi/ToDoListClient/src/service.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = \"http://localhost:5137\";\n\naxios.interceptors.response.use(\n  (response) => {\n    // אם התגובה תקינה (status 200), אנחנו מחזירים אותה כמו שהיא\n    return response;\n  },\n  (error) => {\n    // אם יש שגיאה בתגובה, נרשום אותה בלוג\n    // בודקים אם יש response - זה אומר שהשגיאה הגיעה מהשרת\n    if (error.response) {\n      // שגיאה מהשרת, יש response\n      console.error(\"API Error:\", error.response.status, error.response.data);\n    } else {\n      // שגיאה שלא הגיעה מהשרת (לדוג' בעיות רשת)\n      console.error(\"Error: \", error.message);\n    }\n    \n    // מחזירים את השגיאה כדי שלא תפסיק את הביצוע של המערכת\n    return Promise.reject(error);\n  }\n);\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`/items`);\n    return result.data;\n  },\n\n  addTask: async (name) => {\n    if (!name) {\n      console.error(\"Task name is required!\");\n      return;\n    }\n    console.log('addTask', name);\n    const result = await axios.post(`/items`, { name });\n    return result.data;\n  },\n\n  setCompleted: async (id, isComplete) => {\n    if (!id) {\n      console.error(\"Task ID is required!\");\n      return;\n    }\n\n    console.log('setCompleted called with:', { id, isComplete });\n\n    const result = await axios.put(`/items/${id}`, { \n      isComplete \n    });\n\n    return result.data;\n  },\n\n  deleteTask: async (id) => {\n    if (!id) {\n      console.error(\"Task ID is required for deletion!\");\n      return;\n    }\n    console.log('deleteTask', id);\n    const result = await axios.delete(`/items/${id}`);\n    return result.data;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhDF,KAAK,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC5BD,QAAQ,IAAK;EACZ;EACA,OAAOA,QAAQ;AACjB,CAAC,EACAE,KAAK,IAAK;EACT;EACA;EACA,IAAIA,KAAK,CAACF,QAAQ,EAAE;IAClB;IACAG,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACF,QAAQ,CAACI,MAAM,EAAEF,KAAK,CAACF,QAAQ,CAACK,IAAI,CAAC;EACzE,CAAC,MAAM;IACL;IACAF,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACI,OAAO,CAAC;EACzC;;EAEA;EACA,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAe;EACbO,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,QAAQ,CAAC;IACxC,OAAOD,MAAM,CAACL,IAAI;EACpB,CAAC;EAEDO,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvB,IAAI,CAACA,IAAI,EAAE;MACTV,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAC;MACvC;IACF;IACAC,OAAO,CAACW,GAAG,CAAC,SAAS,EAAED,IAAI,CAAC;IAC5B,MAAMH,MAAM,GAAG,MAAMd,KAAK,CAACmB,IAAI,CAAC,QAAQ,EAAE;MAAEF;IAAK,CAAC,CAAC;IACnD,OAAOH,MAAM,CAACL,IAAI;EACpB,CAAC;EAEDW,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtC,IAAI,CAACD,EAAE,EAAE;MACPd,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAC;MACrC;IACF;IAEAC,OAAO,CAACW,GAAG,CAAC,2BAA2B,EAAE;MAAEG,EAAE;MAAEC;IAAW,CAAC,CAAC;IAE5D,MAAMR,MAAM,GAAG,MAAMd,KAAK,CAACuB,GAAG,CAAC,UAAUF,EAAE,EAAE,EAAE;MAC7CC;IACF,CAAC,CAAC;IAEF,OAAOR,MAAM,CAACL,IAAI;EACpB,CAAC;EAEDe,UAAU,EAAE,MAAOH,EAAE,IAAK;IACxB,IAAI,CAACA,EAAE,EAAE;MACPd,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAC;MAClD;IACF;IACAC,OAAO,CAACW,GAAG,CAAC,YAAY,EAAEG,EAAE,CAAC;IAC7B,MAAMP,MAAM,GAAG,MAAMd,KAAK,CAACyB,MAAM,CAAC,UAAUJ,EAAE,EAAE,CAAC;IACjD,OAAOP,MAAM,CAACL,IAAI;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}